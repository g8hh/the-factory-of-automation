const MILESTONES = [null,
	{
		reqDesc: "Unlock Ruby",
		unl() { return player.materialsUnl.gte(4) },
		reward: "The first 7 rows of upgrades are always unlocked.",
		sup: "All upgrades are always unlocked.",
	},
	{
		reqDesc: "Reach 1e800 Steel",
		unl() { return player.materials[0]?player.materials[0].amt.gte('1e800'):false },
		reward: "((M+1)^2)x global automator speed.",
		tooltip() { return "M = # of milestones completed \n \n Currently: "+formatWhole(Decimal.pow(player.milestones.length+1, hasSuperMilestone(2)?3:2))+"x" },
		sup: "((M+1)^3)x global automator speed.",
	},
	{
		reqDesc: "Reach 1e1,650 Steel",
		unl() { return player.materials[0]?player.materials[0].amt.gte('1e1650'):false },
		reward: "All automator costs increase 25% slower.",
		sup: "All automator costs increase 40% slower.",
	},
	{
		reqDesc: "Unlock Emerald",
		unl() { return player.materialsUnl.gte(6) },
		reward: "Start with the first 7 rows of upgrades bought when unlocking a new layer.",
		sup: "Start with all upgrades bought when unlocking a new layer.",
	},
	{
		reqDesc: "Unlock Alexandrite",
		unl() { return player.materialsUnl.gte(7) },
		reward: `"Each Automator gets a multiplier equal to its amount" is raised ^(log2(R-C+2)+1).`,
		tooltip() { return "C = current resource number (Steel=1, Gold=2, etc.) \n \n R = # of unique resources unlocked" },
		sup: '"Each Automator gets a multiplier equal to its amount" is raised ^(log1.75(R-C+2)+1).',
	},
	{
		reqDesc: "Reach 1e24,400 Steel",
		unl() { return player.materials[0]?player.materials[0].amt.gte('1e24400'):false },
		reward: "Unlock the Supercharger.",
		sup: "Unlock the Supercharger & cube the Super Charge effect.",
	},
	{
		reqDesc: "Reach 1e74,333 Steel",
		unl() { return player.materials[0]?player.materials[0].amt.gte('1e74333'):false },
		reward: "Add 1 Milestone Charge.",
		sup() { return  "Add 1 Milestone Charge for every resource unlocked after Emerald"+(hasSuperMilestone(15)?" (based on best resource unlocked)":".") },
		tooltip() { return hasSuperMilestone(7)?("Currently: +"+formatWhole((hasSuperMilestone(15)?player.eclipse.bestResUnl:player.materialsUnl).sub(6).max(0))):false },
	},
	{
		reqDesc: "Reach 1e1,000 of Steel's A1",
		unl() { return player.materials[0]?(player.materials[0].autoData[0]?player.materials[0].autoData[0].gte('1e1000'):false):false },
		reward: "Unlock a new source of Super Charge.",
		sup: "Unlock two new sources of Super Charge.",
	},
	{
		reqDesc: "Unlock Tsavorite",
		unl() { return player.materialsUnl.gte(10) },
		reward: "Unlock Super Batteries & add 1 Milestone Charge.",
		sup: "Unlock Super Batteries, add 1 Milestone Charge, & Super Charge has another effect.",
	},
	{
		reqDesc: "Reach 1e472,500 Steel",
		unl() { return player.materials[0]?player.materials[0].amt.gte('1e472500'):false },
		reward: "(SB+1)x Super Charge effect.",
		sup: "(SB^2+1)x Super Charge effect, & unlock a new Super Battery Upgrade.",
		tooltip() { return "SB = Super Batteries \n \n Currently: "+formatWhole(player.supercharger.batteries.plus(1).pow(hasSuperMilestone(10)?2:1))+"x" },
	},
	{
		reqDesc: "Reach 1e849,000 Steel",
		unl() { return player.materials[0]?player.materials[0].amt.gte('1e849000'):false },
		reward: "Each resource unlocked after Tsavorite quintuples Super Battery gain.",
		sup: "Each resource unlocked after Demantoid multiplies Super Battery gain by 100, & Super Battery gain from Super Charge is raised ^3.5.",
		tooltip() { return "Currently: "+formatWhole(Decimal.pow(hasSuperMilestone(11)?100:5, player.materialsUnl.sub(hasSuperMilestone(11)?9:10).max(0)))+"x" },
		smalltxt: true,
	},
	{
		reqDesc: "Reach e1,000,000 Steel",
		unl() { return player.materials[0]?player.materials[0].amt.gte('1e1000000'):false },
		reward: "Unlock Radioactivity.",
		sup: "Unlock Radioactivity & triple the Ion chance.",
	},
	{
		reqDesc: "Reach 1e95 Super Batteries",
		unl() { return player.supercharger.batteries.gte(1e95) },
		reward: "A1 speed is raised ^A for the first 4 materials.",
		sup: "A1 speed is raised ^(A+1) for the first 4 materials, & unlock a new Super Battery Upgrade.",
		tooltip() { return "A = # of unique autobuyers unlocked for that material" },
	},
	{
		reqDesc: "Reach 8 Ionic Cores",
		unl() { return player.radioactivity.ionCores.gte(8) },
		reward: "Unlock Super Battery Upgrade Automators.",
		sup: "Unlock Super Battery Upgrade Automators, and Super Battery gain & Ion chance are multiplied by 20.",
	},
	{
		reqDesc: "Reach 10 Eclipsal Power",
		unl() { return player.eclipse.power.gte(10) },
		reward: "Keep milestones on Eclipse reset.",
		sup: "Keep milestones & Supercharged milestones on Eclipse reset, and the seventh Supercharged milestone effect is based on best resources unlocked.",
		smalltxt: true,
	},
	{
		reqDesc: "Reach 20 Eclipsal Power",
		unl() { return player.eclipse.power.gte(20) },
		reward: "Ion Chance can surpass 100%.",
		sup: "Ion Chance can surpass 100%, and each Automator's multiplier is raised ^1.05.",
	},
	{
		reqDesc: "Unlock Iolite",
		unl() { return player.materialsUnl.gte(16) },
		reward: "Ionic Cores reset nothing.",
		sup: "Ionic Cores reset nothing, and the first Eclipsal Power effect is raised ^20.",
	},
	{
		reqDesc: "Reach e2e9 Steel",
		unl() { return player.materials[0]?player.materials[0].amt.gte(Decimal.pow(10, 2e9)):false },
		reward: "Apparatus Speed slows down the decay of Eclipsal Lifespan.",
		sup: "Apparatus Speed slows down the decay of Eclipsal Lifespan, and Material effects' tetration exponents are increased by 0.05.",
		tooltip() { return "Currently: "+format(tmp.app.spd.plus(1).log10().plus(1).sqrt())+"x slower" },
		smalltxt: true,
	},
]
const MILESTONES_AMT = MILESTONES.length-1;

function hasMilestone(x) { return player.milestones.includes(x) }